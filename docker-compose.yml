version: '3'
services:
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - '6379:6379'
  pgsql:
    container_name: pgsql
    image: postgres:latest
    ports:
      - '5432:5432'
    volumes:
      - ./services/pgsql/init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - ./data/pgsql:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
  tic_tac_toe_api:
    container_name: tic_tac_toe_api
    image: alexanderfromearth/tic-tac-toe-api:latest
    volumes:
      - ./services/tic-tac-toe-api/configs:/usr/src/app/configs
      - ./services/tic-tac-toe-api/src:/usr/src/app/src
      - ./services/tic-tac-toe-api/index.js:/usr/src/app/index.js
    environment:
      AUTH_SECRET: super-secret
      REDIS_URL: redis://redis:6379
      DB_URL: postgresql://tic_tac_toe:Passw0rd@pgsql:5432/tic_tac_toe
      DB_MIN_POOL: 2
      DB_MAX_POOL: 8
      NODE_ENV: production
      LOGGER_LEVEL: info
      LOKI_HOST: http://loki:3100
      ENABLE_CONSOLE: 1
      METRICS_PREFIX: tic_tac_toe_
    ports:
      - '12321:12321'
    command: 'bash -c "npm run db migrate:latest && npm run debug"'
    depends_on:
      - redis
      - pgsql
  skillfox_api:
    container_name: skillfox_api
    image: alexanderfromearth/skillfox-api:latest
    volumes:
      - ./services/skillfox-api/configs:/usr/src/app/configs
      - ./services/skillfox-api/src:/usr/src/app/src
    environment:
      AUTH_SECRET: super-secret
      REDIS_URL: redis://redis:6379
      DB_HOST: pgsql
      DB_PORT: 5432
      DB_USERNAME: skillfox
      DB_PASSWORD: Passw0rd
      DB_DATABASE: skillfox
      DB_MIN_POOL: 2
      DB_MAX_POOL: 8
      NODE_ENV: production
      LOGGER_LEVEL: info
      LOKI_HOST: http://loki:3100
      ENABLE_CONSOLE: 1
      METRICS_PREFIX: skillfox_
    ports:
      - '3001:3001'
    command: 'bash -c "npx knex migrate:latest --env production && cd src && node index.js"'
    depends_on:
      - redis
      - pgsql
  loki:
    container_name: loki
    image: grafana/loki:latest
    command: [ '-config.file=/etc/loki/config.yaml' ]
    ports:
      - '3100:3100'
    volumes:
      - ./services/grafana/loki.yaml:/etc/loki/config.yaml
      - ./data/loki:/var/loki
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    command: [ '--config.file=/etc/prometheus/config.yaml' ]
    volumes:
      - ./services/grafana/prometheus.yaml:/etc/prometheus/config.yaml
    ports:
      - '9090:9090'
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./services/grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - '3000:3000'
    depends_on:
      - loki
      - prometheus
  proxy:
    container_name: proxy
    image: alexanderfromearth/andreeff-proxy:latest
    volumes:
      - ./services/nginx:/etc/nginx
      - /etc/letsencrypt:/etc/letsencrypt
    ports:
      - '80:80'
      - '443:443'
    command: 'nginx -g "daemon off;"'
    depends_on:
      - tic_tac_toe_api
      - skillfox_api
      - grafana
